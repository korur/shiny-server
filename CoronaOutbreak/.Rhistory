deaths$type <- "death"
dim(confirmed)
names(confirmed)[139]
?rename_sheets()
?dplyr::rename_sheets()
?tidyrr::rename_sheets()
?tidyr::rename_sheets()
confirmed <- rename_sheets(confirmed)
deaths <- rename_sheets(deaths)
dim(confirmed)
confirmed <- pivot(confirmed)
dim(confirmed)
packageVersion("dplyr")
packageVersion("vctrs")
cf <- confirmed
cf
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
install.packages("vctrs")
cf2 <- cf %>% tidyr::pivot
packageVersion("vctrs")
library(vctrs)
packageVersion("vctrs")
install.packages("vctrs")
install.packages("vctrs")
remove.packages("vctrs")
install.packages("vctrs")
# libraries needed
library(tidyverse)
# Functions needed
#Rename
#'
#' Rename first few columns
#'
#' @param df Sheet.
#'
#' @keywords internal
rename_sheets <- function(df){
names(df)[1:4] <- c(
"state",
"country",
"lat",
"lon"
)
return(df)
}
#' Pivot
#'
#' Change data from wide to long.
#'
#' @param df Sheet.
#'
#' @keywords internal
pivot <- function(df){
tidyr::pivot_longer(
df,
tidyselect::contains("/"),
names_to = c("date"),
values_to = c("cases"),
values_ptypes = list(cases = "character")
)
}
#' Convert
#'
#' Convert dates.
#'
#' @keywords internal
as_date <- function(date){
date <- lubridate::mdy(date, "%m/%d/%Y")
date[!is.na(date)]
}
# jhu data
confirmed_sheet <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
deaths_sheet <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"
# confirmed cases
confirmed <- readr::read_csv(confirmed_sheet, col_types = readr::cols())
# deaths
deaths <- readr::read_csv(deaths_sheet, col_types = readr::cols())
# add col
confirmed$type <- "confirmed"
deaths$type <- "death"
# rename
confirmed <- rename_sheets(confirmed)
deaths <- rename_sheets(deaths)
confirmed <- pivot(confirmed)
cf <- confirmed
dim(cf)
names(cf){1:5}
names(cf){1:5]
names(cf)[1:5]
library(tidyverse)
# Functions needed
#Rename
#'
#' Rename first few columns
#'
#' @param df Sheet.
#'
#' @keywords internal
rename_sheets <- function(df){
names(df)[1:4] <- c(
"state",
"country",
"lat",
"lon"
)
return(df)
}
#' Pivot
#'
#' Change data from wide to long.
#'
#' @param df Sheet.
#'
#' @keywords internal
pivot <- function(df){
tidyr::pivot_longer(
df,
tidyselect::contains("/"),
names_to = c("date"),
values_to = c("cases"),
values_ptypes = list(cases = "character")
)
}
#' Convert
#'
#' Convert dates.
#'
#' @keywords internal
as_date <- function(date){
date <- lubridate::mdy(date, "%m/%d/%Y")
date[!is.na(date)]
}
# jhu data
confirmed_sheet <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
deaths_sheet <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"
# confirmed cases
confirmed <- readr::read_csv(confirmed_sheet, col_types = readr::cols())
# deaths
deaths <- readr::read_csv(deaths_sheet, col_types = readr::cols())
# add col
confirmed$type <- "confirmed"
deaths$type <- "death"
# rename
confirmed <- rename_sheets(confirmed)
deaths <- rename_sheets(deaths)
# pivot longer
confirmed <- pivot(confirmed)
packageVersion("tidyr")
install.packages("tidyr")
packageVersion("tidyr")
# libraries needed
library(tidyverse)
# Functions needed
#Rename
#'
#' Rename first few columns
#'
#' @param df Sheet.
#'
#' @keywords internal
rename_sheets <- function(df){
names(df)[1:4] <- c(
"state",
"country",
"lat",
"lon"
)
return(df)
}
#' Pivot
#'
#' Change data from wide to long.
#'
#' @param df Sheet.
#'
#' @keywords internal
pivot <- function(df){
tidyr::pivot_longer(
df,
tidyselect::contains("/"),
names_to = c("date"),
values_to = c("cases"),
values_ptypes = list(cases = "character")
)
}
#' Convert
#'
#' Convert dates.
#'
#' @keywords internal
as_date <- function(date){
date <- lubridate::mdy(date, "%m/%d/%Y")
date[!is.na(date)]
}
# jhu data
confirmed_sheet <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
deaths_sheet <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"
# confirmed cases
confirmed <- readr::read_csv(confirmed_sheet, col_types = readr::cols())
# deaths
deaths <- readr::read_csv(deaths_sheet, col_types = readr::cols())
# add col
confirmed$type <- "confirmed"
deaths$type <- "death"
# rename
confirmed <- rename_sheets(confirmed)
deaths <- rename_sheets(deaths)
# pivot longer
confirmed <- pivot(confirmed)
pivot <- function(df){
tidyr::pivot_longer(
df,
tidyselect::contains("/"),
names_to = c("date"),
values_to = c("cases")
)
}
confirmed1 <- pivot(confirmed)
dim(confirmed)
pivot
pivot <- function(df){
tidyr::pivot_longer(
df,
tidyselect::contains("/"),
names_to = c("date"),
values_to = c("cases"),
values_ptypes = list(cases = "numeric")
)
}
confirmed1 <- pivot(confirmed)
pivot <- function(df){
tidyr::pivot_longer(
df,
tidyselect::contains("/"),
names_to = c("date"),
values_to = c("cases")
)
}
confirmed <- readr::read_csv(confirmed_sheet, col_types = readr::cols())
# deaths
deaths <- readr::read_csv(deaths_sheet, col_types = readr::cols())
# add col
confirmed$type <- "confirmed"
deaths$type <- "death"
confirmed <- rename_sheets(confirmed)
dim(confirmed)
confirmed <- pivot(confirmed)
dim(confirmed)
names(confirmed)
head(confirmed)
head(df)
deaths <- pivot(deaths)
pivot
deaths <- readr::read_csv(deaths_sheet, col_types = readr::cols())
deaths <- rename_sheets(deaths
)
deaths <- pivot(deaths)
dim(deaths)
head(deaths)
con <- pool::dbPool(
RPostgres::Postgres(),
host = config$database$host,
user = config$database$user,
password = config$database$password,
dbname = config$database$name,
port = 25060)
# Save to database
log <- tibble::tibble(last_updated = Sys.time())
DBI::dbWriteTable(con, "jhu", df, overwrite =TRUE, append = FALSE)
DBI::dbWriteTable(con, "log", log, append = TRUE)
head(df)
dftest <- df
head(dftest)
# libraries needed
library(tidyverse)
# Functions needed
#Rename
#'
#' Rename first few columns
#'
#' @param df Sheet.
#'
#' @keywords internal
rename_sheets <- function(df){
names(df)[1:4] <- c(
"state",
"country",
"lat",
"lon"
)
return(df)
}
#' Pivot
#'
#' Change data from wide to long.
#'
#' @param df Sheet.
#'
#' @keywords internal
pivot <- function(df){
tidyr::pivot_longer(
df,
tidyselect::contains("/"),
names_to = c("date"),
values_to = c("cases"),
values_ptypes = list(cases = "character")
)
}
#' Convert
#'
#' Convert dates.
#'
#' @keywords internal
as_date <- function(date){
date <- lubridate::mdy(date, "%m/%d/%Y")
date[!is.na(date)]
}
# jhu data
confirmed_sheet <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
deaths_sheet <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"
# confirmed cases
confirmed <- readr::read_csv(confirmed_sheet, col_types = readr::cols())
# deaths
deaths <- readr::read_csv(deaths_sheet, col_types = readr::cols())
# add col
confirmed$type <- "confirmed"
deaths$type <- "death"
# rename
confirmed <- rename_sheets(confirmed)
deaths <- rename_sheets(deaths)
# pivot longer
confirmed <- pivot(confirmed)
deaths <- pivot(deaths)
suppressWarnings({
df <- dplyr::bind_rows(confirmed, deaths) %>%
dplyr::mutate(
date = as_date(date),
cases = trimws(cases),
cases = as.numeric(cases),
cases = dplyr::case_when(
is.na(cases) ~ 0,
TRUE ~ cases
),
country_iso2c = countrycode::countrycode(country, "country.name", "iso2c")
)
})
df$state <- ifelse(is.na(df$state), df$country,df$state)
# libraries needed
library(tidyverse)
# Functions needed
#Rename
#'
#' Rename first few columns
#'
#' @param df Sheet.
#'
#' @keywords internal
rename_sheets <- function(df){
names(df)[1:4] <- c(
"state",
"country",
"lat",
"lon"
)
return(df)
}
#' Pivot
#'
#' Change data from wide to long.
#'
#' @param df Sheet.
#'
#' @keywords internal
pivot <- function(df){
tidyr::pivot_longer(
df,
tidyselect::contains("/"),
names_to = c("date"),
values_to = c("cases")
)
}
#' Convert
#'
#' Convert dates.
#'
#' @keywords internal
as_date <- function(date){
date <- lubridate::mdy(date, "%m/%d/%Y")
date[!is.na(date)]
}
# jhu data
confirmed_sheet <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
deaths_sheet <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"
# confirmed cases
confirmed <- readr::read_csv(confirmed_sheet, col_types = readr::cols())
# deaths
deaths <- readr::read_csv(deaths_sheet, col_types = readr::cols())
# add col
confirmed$type <- "confirmed"
deaths$type <- "death"
# rename
confirmed <- rename_sheets(confirmed)
deaths <- rename_sheets(deaths)
# pivot longer
confirmed <- pivot(confirmed)
deaths <- pivot(deaths)
suppressWarnings({
df <- dplyr::bind_rows(confirmed, deaths) %>%
dplyr::mutate(
date = as_date(date),
cases = trimws(cases),
cases = as.numeric(cases),
cases = dplyr::case_when(
is.na(cases) ~ 0,
TRUE ~ cases
),
country_iso2c = countrycode::countrycode(country, "country.name", "iso2c")
)
})
df$state <- ifelse(is.na(df$state), df$country,df$state)
head(df)
head(dftest)
dim(df)
dim(dftest)
# libraries needed
library(tidyverse)
# Functions needed
#Rename
#'
#' Rename first few columns
#'
#' @param df Sheet.
#'
#' @keywords internal
rename_sheets <- function(df){
names(df)[1:4] <- c(
"state",
"country",
"lat",
"lon"
)
return(df)
}
#' Pivot
#'
#' Change data from wide to long.
#'
#' @param df Sheet.
#'
#' @keywords internal
pivot <- function(df){
tidyr::pivot_longer(
df,
tidyselect::contains("/"),
names_to = c("date"),
values_to = c("cases")
)
}
#' Convert
#'
#' Convert dates.
#'
#' @keywords internal
as_date <- function(date){
date <- lubridate::mdy(date, "%m/%d/%Y")
date[!is.na(date)]
}
# jhu data
confirmed_sheet <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv"
deaths_sheet <- "https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_deaths_global.csv"
# confirmed cases
confirmed <- readr::read_csv(confirmed_sheet, col_types = readr::cols())
# deaths
deaths <- readr::read_csv(deaths_sheet, col_types = readr::cols())
# add col
confirmed$type <- "confirmed"
deaths$type <- "death"
# rename
confirmed <- rename_sheets(confirmed)
deaths <- rename_sheets(deaths)
# pivot longer
confirmed <- pivot(confirmed)
deaths <- pivot(deaths)
suppressWarnings({
df <- dplyr::bind_rows(confirmed, deaths) %>%
dplyr::mutate(
date = as_date(date),
cases = trimws(cases),
cases = as.numeric(cases),
cases = dplyr::case_when(
is.na(cases) ~ 0,
TRUE ~ cases
),
country_iso2c = countrycode::countrycode(country, "country.name", "iso2c")
)
})
df$state <- ifelse(is.na(df$state), df$country,df$state)
con <- pool::dbPool(
RPostgres::Postgres(),
host = config$database$host,
user = config$database$user,
password = config$database$password,
dbname = config$database$name,
port = 25060)
# Save to database
log <- tibble::tibble(last_updated = Sys.time())
DBI::dbWriteTable(con, "jhu", df, overwrite =TRUE, append = FALSE)
DBI::dbWriteTable(con, "log", log, append = TRUE)
log
packageVersion("vctrs")
